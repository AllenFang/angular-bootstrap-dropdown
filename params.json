{"name":"Angular-bootstrap-dropdown","tagline":"It's a angular directive for bootstrap dropdown and multi-select","body":"# angular-bootstrap-dropdown\r\nIt's a angular directive for bootstrap dropdown, named 'bsDropdown'   \r\n\r\nThe bsDropdown include all basic function in dropdown, include set default value, and listen change etc.   \r\n\r\nAlso support multi-select on newest version.   \r\n\r\nangular-bootstrap-dropdown dependencies on AngularJS 1.2.x and Bootstrap 3   \r\n\r\nYou can see an online demo on [here](http://frozen-tundra-7264.herokuapp.com/examples/L8/#).   \r\n\r\n### Versions\r\n0.1.0 support basic function in bsDropdown, include use ng-model to set default value, and ng-change to listen change   \r\n\r\n0.1.1 add bootstrap divider in bsDropdown \r\n\r\n0.2.0 add bootstrap dropdown disabled and item disabled in bsDropdown   \r\n \r\n0.9.0(latest) add multi-select to bsDropdown!!   \r\n\r\n### Development\r\n```\r\n$ git clone https://github.com/AllenFang/angular-bootstrap-dropdown.git\r\n$ cd angular-practice-example\r\n$ npm install\r\n$ bower install\r\n```\r\nUse gulp to test the bsDropdown\r\n```\r\n$ npm test\r\nor\r\n$ node_modules/gulp/bin/gulp.js test\r\n```\r\n\r\n\r\n### Usage\r\nInclude the angular-bootstrap-dropdown library to your html page\r\n```\r\n<script src=\"bsDropdown.min.js\"></script>\r\n```\r\nThe ```bsDropdown.min.js``` is in the dist folder.\r\nIn the next, include the ```ng.bs.dropdown``` to your angular module dependencies  \r\n```\r\nangular.module(\"demoApp\", ['ng.bs.dropdown'])\r\n```\r\nThen, you can go to use the angular-bootstrap-dropdown, below is a simple example  \r\n\r\nFirst of all, give an angular controller\r\n```\r\nangular.module(\"demoApp\", ['ng.bs.dropdown'])\r\n\t.controller(\"YearController\", function($scope){\r\n\t\t$scope.years = [\r\n\t\t\t\"2015\",\r\n\t\t\t\"2014\",\r\n\t\t\t\"2013\",\r\n\t\t\t\"2012\",\r\n\t\t\t\"2011\",\r\n\t\t\t\"2010\"\r\n\t\t];\r\n\t\t$scope.selectYear = $scope.years[2];  //current select item\r\n\t\t\r\n\t\t/*changeYear function will be called if dropdown change*/\r\n\t\t$scope.changeYear = function(){\r\n\t\t\tconsole.log(\"YearController say... \" + $scope.selectYear);\r\n\t\t}\r\n\t});\r\n```\r\n\r\nSo here is your partial html code\r\n```\r\n<div ng-controller=\"YearController\">\r\n\t\t\t<h4>You select {{selectYear}} ....</h4><br/>\r\n\t\t\t<div bs-dropdown \r\n\t\t\t     bs-dropdown-display=\"MyDropDown\" \r\n\t\t\t\t bs-dropdown-items=\"years\" \r\n\t\t\t     ng-model=\"selectYear\" \r\n\t\t\t     ng-change=\"changeYear()\"></div>\r\n</div>\r\n```\r\n\r\n### Setting\r\nUse ```bs-dropdown-display``` attribute to display default text on dropdown if there is no any default value selected  \r\nUse ```bs-dropdown-items``` attribute to specify the dropdown options  \r\nUse ```ng-model``` to set the default selected value   \r\nUse ```ng-change``` to listen up the change event on dropdown  \r\nUse ```bs-dropdown-divider``` to specify the divider, for example bs-dropdown-divider=\"{{[2,5]}}\".   \r\nUse ```bs-dropdown-item-disabled``` to specify which option should be disabled,for example bs-dropdown-item-disabled=\"{{[2,5]}}\".   \r\nUse ```bs-dropdown-disabled``` to set dropdown disabled, for example bs-dropdown-disabled=\"true\".   \r\nUse ```bs-dropdown-multi``` to specify bsDropdown to be a multi-select dropdown.   ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}